import"../earcut/earcut.b5948046.js";import{i as r}from"../polygon-clipping/polygon-clipping.9976feed.js";import"../d3-array/d3-array.375ae530.js";function e(r,e,t){void 0===t&&(t={});var o={type:"Feature"};return(0===t.id||t.id)&&(o.id=t.id),t.bbox&&(o.bbox=t.bbox),o.properties=e||{},o.geometry=r,o}function t(r,t,o){if(void 0===o&&(o={}),!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");if(r.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!a(r[0])||!a(r[1]))throw new Error("coordinates must contain numbers");return e({type:"Point",coordinates:r},t,o)}function o(r,t,o){void 0===o&&(o={});for(var n=0,i=r;n<i.length;n++){var a=i[n];if(a.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var u=0;u<a[a.length-1].length;u++)if(a[a.length-1][u]!==a[0][u])throw new Error("First and last Position are not equivalent.")}return e({type:"Polygon",coordinates:r},t,o)}function n(r,t,o){if(void 0===o&&(o={}),r.length<2)throw new Error("coordinates must be an array of two or more positions");return e({type:"LineString",coordinates:r},t,o)}function i(r,e){void 0===e&&(e={});var t={type:"FeatureCollection"};return e.id&&(t.id=e.id),e.bbox&&(t.bbox=e.bbox),t.features=r,t}function a(r){return!isNaN(r)&&null!==r&&!Array.isArray(r)}function u(r,e,t){if(null!==r)for(var o,n,i,a,l,s,c,f,g=0,y=0,d=r.type,h="FeatureCollection"===d,m="Feature"===d,p=h?r.features.length:1,b=0;b<p;b++){l=(f=!!(c=h?r.features[b].geometry:m?r.geometry:r)&&"GeometryCollection"===c.type)?c.geometries.length:1;for(var v=0;v<l;v++){var w=0,P=0;if(null!==(a=f?c.geometries[v]:c)){s=a.coordinates;var x=a.type;switch(g=!t||"Polygon"!==x&&"MultiPolygon"!==x?0:1,x){case null:break;case"Point":if(!1===e(s,y,b,w,P))return!1;y++,w++;break;case"LineString":case"MultiPoint":for(o=0;o<s.length;o++){if(!1===e(s[o],y,b,w,P))return!1;y++,"MultiPoint"===x&&w++}"LineString"===x&&w++;break;case"Polygon":case"MultiLineString":for(o=0;o<s.length;o++){for(n=0;n<s[o].length-g;n++){if(!1===e(s[o][n],y,b,w,P))return!1;y++}"MultiLineString"===x&&w++,"Polygon"===x&&P++}"Polygon"===x&&w++;break;case"MultiPolygon":for(o=0;o<s.length;o++){for(P=0,n=0;n<s[o].length;n++){for(i=0;i<s[o][n].length-g;i++){if(!1===e(s[o][n][i],y,b,w,P))return!1;y++}P++}w++}break;case"GeometryCollection":for(o=0;o<a.geometries.length;o++)if(!1===u(a.geometries[o],e,t))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function l(r,t){!function(r,e){var t,o,n,i,a,u,l,s,c,f,g=0,y="FeatureCollection"===r.type,d="Feature"===r.type,h=y?r.features.length:1;for(t=0;t<h;t++){for(u=y?r.features[t].geometry:d?r.geometry:r,s=y?r.features[t].properties:d?r.properties:{},c=y?r.features[t].bbox:d?r.bbox:void 0,f=y?r.features[t].id:d?r.id:void 0,a=(l=!!u&&"GeometryCollection"===u.type)?u.geometries.length:1,n=0;n<a;n++)if(null!==(i=l?u.geometries[n]:u))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===e(i,g,s,c,f))return!1;break;case"GeometryCollection":for(o=0;o<i.geometries.length;o++)if(!1===e(i.geometries[o],g,s,c,f))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===e(null,g,s,c,f))return!1;g++}}(r,(function(r,o,n,i,a){var u,l=null===r?null:r.type;switch(l){case null:case"Point":case"LineString":case"Polygon":return!1!==t(e(r,n,{bbox:i,id:a}),o,0)&&void 0}switch(l){case"MultiPoint":u="Point";break;case"MultiLineString":u="LineString";break;case"MultiPolygon":u="Polygon"}for(var s=0;s<r.coordinates.length;s++){var c=r.coordinates[s];if(!1===t(e({type:u,coordinates:c},n),o,s))return!1}}))}function s(r){var e=[Infinity,Infinity,-Infinity,-Infinity];return u(r,(function(r){e[0]>r[0]&&(e[0]=r[0]),e[1]>r[1]&&(e[1]=r[1]),e[2]<r[0]&&(e[2]=r[0]),e[3]<r[1]&&(e[3]=r[1])})),e}function c(r){if(Array.isArray(r))return r;if("Feature"===r.type){if(null!==r.geometry)return r.geometry.coordinates}else if(r.coordinates)return r.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function f(r){return"Feature"===r.type?r.geometry:r}function g(r,e){void 0===e&&(e={});var t=Number(r[0]),n=Number(r[1]),i=Number(r[2]),a=Number(r[3]);if(6===r.length)throw new Error("@turf/bbox-polygon does not support BBox with 6 positions");var u=[t,n];return o([[u,[i,n],[i,a],[t,a],u]],e.properties,{bbox:r,id:e.id})}function y(r,e){void 0===e&&(e={});var o=s(r);return t([(o[0]+o[2])/2,(o[1]+o[3])/2],e.properties,e)}s.default=s;var d=globalThis&&globalThis.__spreadArrays||function(){for(var r=0,e=0,t=arguments.length;e<t;e++)r+=arguments[e].length;var o=Array(r),n=0;for(e=0;e<t;e++)for(var i=arguments[e],a=0,u=i.length;a<u;a++,n++)o[n]=i[a];return o};function h(r){return Array.isArray(r)?v(r):r&&r.bbox?v(r.bbox):[360*b(),180*b()]}function m(r,e){void 0===e&&(e={}),null==r&&(r=1);for(var o=[],n=0;n<r;n++)o.push(t(h(e.bbox)));return i(o)}function p(r,e){void 0===e&&(e={}),null==r&&(r=1),a(e.num_vertices)&&void 0!==e.num_vertices||(e.num_vertices=10),a(e.max_radial_length)&&void 0!==e.max_radial_length||(e.max_radial_length=10);for(var t=[],n=function(r){var n,i=[],a=d(Array(e.num_vertices+1)).map(Math.random);a.forEach((function(r,e,t){t[e]=e>0?r+t[e-1]:r})),a.forEach((function(r){r=2*r*Math.PI/a[a.length-1];var t=Math.random();i.push([t*(e.max_radial_length||10)*Math.sin(r),t*(e.max_radial_length||10)*Math.cos(r)])})),i[i.length-1]=i[0],i=i.map((n=h(e.bbox),function(r){return[r[0]+n[0],r[1]+n[1]]})),t.push(o([i]))},u=0;u<r;u++)n();return i(t)}function b(){return Math.random()-.5}function v(r){return[Math.random()*(r[2]-r[0])+r[0],Math.random()*(r[3]-r[1])+r[1]]}function w(t,n,i){void 0===i&&(i={});var a=f(t),u=f(n),l=r.union(a.coordinates,u.coordinates);return 0===l.length?null:1===l.length?o(l[0],i.properties):function(r,t,o){return void 0===o&&(o={}),e({type:"MultiPolygon",coordinates:r},t,o)}(l,i.properties)}export{g as a,s as b,l as c,p as d,y as e,i as f,c as g,n as l,o as p,m as r,w as u};
